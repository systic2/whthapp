{"version":3,"sources":["color.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setToDos","useEffect","loadToDos","travel","AsyncStorage","setItem","JSON","stringify","work","onChangeText","payload","saveToDos","toSave","section","getItem","s","parse","addToDo","newToDos","Date","now","done","editable","editThis","key","editToDo","event","completeToDo","deleteToDo","Platform","OS","confirm","Alert","alert","onPress","View","style","styles","container","StatusBar","header","TouchableOpacity","Text","fontSize","fontWeight","color","TextInput","onSubmitEditing","returnKeyType","placeholder","input","ScrollView","Object","keys","map","toDo","Fontisto","name","size","doneDoText","toDoText","e","defaultValue","AntDesign","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","btnText","paddingVertical","borderRadius","marginVertical","marginBottom","alignItems","textDecorationLine"],"mappings":"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","file":"static/js/app.db8fc0c9.chunk.js","sourcesContent":["export const theme = {\r\n  bg: \"black\",\r\n  grey: \"#3A3D40\",\r\n  toDoBg: \"#5C5C60\",\r\n}","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n} from 'react-native';\nimport { theme } from './color';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Fontisto, AntDesign } from '@expo/vector-icons';\n\n\nconst STORAGE_KEY = \"@toDos\";\nconst SECTION_KEY = \"@WorkOrTravel\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n\n  useEffect(() => {\n    loadToDos();\n  }, [])\n\n  const travel = async () => {\n    setWorking(false);\n    await AsyncStorage.setItem(SECTION_KEY, JSON.stringify(false));\n  };\n  const work = async () => {\n    setWorking(true);\n    await AsyncStorage.setItem(SECTION_KEY, JSON.stringify(true));\n  };\n  const onChangeText = (payload) => setText(payload);\n  const saveToDos = async (toSave) => {\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n  };\n  const loadToDos = async () => {\n    const section = await AsyncStorage.getItem(SECTION_KEY);\n    const s = await AsyncStorage.getItem(STORAGE_KEY);\n    if (section) {\n      setWorking(JSON.parse(section));\n    }\n    if (s) {\n      setToDos(JSON.parse(s));\n    }\n  }\n\n  const addToDo = async () => {\n    if (text === \"\") {\n      return;\n    }\n    // save to do\n    // const newToDos = Object.assign(\n    //   {}, \n    //   toDos, \n    //   {[Date.now()]: { text, work:working },}\n    // );\n    const newToDos = {\n      ...toDos,\n      [Date.now()]: { text, working, done: false, editable: false, },\n    };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setText(\"\");\n  };\n\n  const editThis = async (key) => {\n    const newToDos = { ...toDos };\n    newToDos[key] = { ...newToDos[key], editable: !newToDos[key].editable, };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n  }\n\n  const editToDo = async (key, event) => {\n    const newToDos = { ...toDos };\n    newToDos[key] = {\n      ...newToDos[key],\n      editable: !newToDos[key].editable,\n      text: text,\n    };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n  }\n\n  const completeToDo = async (key) => {\n    const newToDos = { ...toDos }\n    newToDos[key] = { ...newToDos[key], done: !newToDos[key].done, };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n  };\n\n  const deleteToDo = async (key) => {\n    if (Platform.OS === \"web\") {\n      const ok = confirm(\"Do you want to delete this To Do?\");\n      if (ok) {\n        const newToDos = { ...toDos };\n        delete newToDos[key];\n        setToDos(newToDos);\n        saveToDos(newToDos);\n      }\n    } else {\n      Alert.alert(\"Delete To Do\", \"Are you sure?\", [\n        { text: \"Cancel\" },\n        {\n          text: \"I'm sure\",\n          onPress: () => {\n            const newToDos = { ...toDos };\n            delete newToDos[key];\n            setToDos(newToDos);\n            saveToDos(newToDos);\n          }\n        },\n      ])\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text style={{\n            fontSize: 38,\n            fontWeight: \"600\",\n            color: working ? \"white\" : theme.grey\n          }}>Work</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text style={{\n            fontSize: 38,\n            fontWeight: \"600\",\n            color: !working ? \"white\" : theme.grey\n          }}>Travel</Text>\n        </TouchableOpacity>\n      </View>\n      <TextInput\n        onSubmitEditing={addToDo}\n        onChangeText={onChangeText}\n        returnKeyType=\"done\"\n        placeholder={working ? \"Add a To do\" : \"Where do you want to go?\"}\n        style={styles.input}\n      />\n      <ScrollView>\n        {Object.keys(toDos).map((key) =>\n          toDos[key].working === working ? <View key={key} style={styles.toDo}>\n            <TouchableOpacity onPress={() => completeToDo(key)}>\n              <Fontisto name={toDos[key].done ? \"checkbox-active\" : \"checkbox-passive\"} size={18} color={theme.grey} />\n            </TouchableOpacity>\n            {toDos[key].editable === false ? <Text style={toDos[key].done ? styles.doneDoText : styles.toDoText}>{toDos[key].text}</Text> :\n              <TextInput\n                onSubmitEditing={(e) => editToDo(key, e)}\n                onChangeText={onChangeText}\n                defaultValue={toDos[key].text}\n                style={styles.input}\n              />\n            }\n            <TouchableOpacity onPress={() => editThis(key)}>\n              <AntDesign name=\"edit\" size={18} color={theme.grey} />\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => deleteToDo(key)}>\n              <Fontisto name=\"trash\" size={18} color={theme.grey} />\n            </TouchableOpacity>\n          </View> : null)}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    marginTop: 100,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginVertical: 20,\n    fontSize: 18,\n  },\n  toDo: {\n    backgroundColor: theme.toDoBg,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  toDoText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n  doneDoText: {\n    color: 'gray',\n    fontSize: 16,\n    fontWeight: \"500\",\n    textDecorationLine: 'line-through',\n  }\n});\n"],"sourceRoot":""}